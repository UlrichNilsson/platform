# This is a basic workflow to help you get started with Actions

name: Dotnet-UtilityAPI-CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    paths:
      - ".github/workflows/Dotnet-UtilityAPI.yml"
      - "dotnet5/**"
  pull_request:
    branches: [ master ]
    paths:
      - ".github/workflows/Dotnet-UtilityAPI.yml"
      - "dotnet5/**"
      
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Check dotnet version on runner
        run: dotnet --version
      
      - name: Dotnet restore
        run: dotnet restore dotnet/UtilityAPI/src/UtilityAPI.csproj
      
      - name: Dotnet build
        run: dotnet build dotnet/UtilityAPI/src/UtilityAPI.csproj --no-restore

      - name: Dotnet test
        run: dotnet test dotnet/UtilityAPI/src/UtilityAPI.csproj --no-restore

      - name: List docker version
        run: docker --version

      - name: Build docker ARM
        run: docker build -f dotnet/UtilityAPI/src/arm.Dockerfile . -t ulrichnilsson/utilityapi

      - name: Docker list images
        run: docker image ls
      